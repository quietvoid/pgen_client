on:
  workflow_dispatch:

name: Windows Artifacts

env:
  RELEASE_BIN: pgen_client
  RELEASE_DIR: artifacts
  WINDOWS_TARGET: x86_64-pc-windows-msvc

jobs:
  build:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      id-token: write
      attestations: write

    strategy:
      fail-fast: false

      matrix:
        build: [Windows]
        include:
          - build: Windows
            os: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Get the version
        shell: bash
        run: |
          echo "RELEASE_PKG_VERSION=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[].version')" >> $GITHUB_ENV

      - name: Build (Windows)
        run: cargo build --release

      - name: Create artifact directory
        run: mkdir ${{ env.RELEASE_DIR }}

      - name: Create zipfile (Windows)
        if: matrix.build == 'Windows'
        shell: bash
        run: |
          mv ./target/release/${{ env.RELEASE_BIN }}.exe ./${{ env.RELEASE_BIN }}.exe
          7z a ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ env.RELEASE_PKG_VERSION }}-${{ env.WINDOWS_TARGET }}.zip ./${{ env.RELEASE_BIN }}.exe

      - name: Upload Zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build }}
          path: ./${{ env.RELEASE_DIR }}

      - name: Attest
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: ./${{ env.RELEASE_DIR }}/*
